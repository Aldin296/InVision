@inject DialogService DialogService
@using InVision.Data
@inject Blazored.LocalStorage.ILocalStorageService localstore
@inject KBoardService service;
@inject UserService userservice;



<RadzenTemplateForm TItem="KBoard" Data="@model" Submit=@OnSubmit>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Title" />
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.Name" Name="Name" />
            <RadzenRequiredValidator Text="Name is required" Component="Name" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Description" />
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.Description" Name="Description" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Description" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public string Name { get; set; }

    [Parameter]
    public string Description { get; set; }

    KBoard model = new KBoard();

    protected override void OnParametersSet()
    {
        model.Name = Name;
        model.Description = Description;
    }

    protected async void OnSubmit(KBoard model)
    {
        string userid = await localstore.GetItemAsync<string>("UserId");
        var user = await userservice.GetUserById(userid);
        model.CreatedBy = user.Name;
        await service.CreateKBoard(userid, model);
        DialogService.Close(model);
    }
}