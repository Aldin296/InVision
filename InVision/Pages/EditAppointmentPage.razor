@inject DialogService DialogService
@using InVision.Data.Service
@using InVision.Data.Model
@inject CalendarService calendarService
@inject ILocalStorageService localstore


<RadzenTemplateForm TItem="Appointment" Data="@model" Submit=@OnSubmit>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Text" />
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" />
            <RadzenRequiredValidator Text="Title is required" Component="Text" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="End" />
        </div>
        <div class="col">
            <RadzenDatePicker Name="End" @bind-Value="@model.End" ShowTime="true" />
            <RadzenRequiredValidator Component="End" Text="End is required" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Color" />
        </div>
        <div class="col">
            <RadzenColorPicker Name="ColorPicker" @bind-Value=@model.Color ShowHSV=@showHSV ShowRGBA=@showRGBA ShowColors=@showColors ShowButton=@showButton Change=@OnChange />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
        </div>
        <div class="col-md-3">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
            <RadzenButton Click="OnDeleteAppointmentClick" Text="Delete" Style="background-color:red"></RadzenButton>
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public Appointment Appointment { get; set; }

    string userId = "";
    Appointment model = new Appointment();

    bool showHSV = true;
    bool showRGBA = true;
    bool showColors = true;
    bool showButton = false;

    void OnChange(string value)
    {
        Console.WriteLine("Color changed");
    }

    protected override void OnParametersSet()
    {
        model = Appointment;
    }

    async void OnSubmit(Appointment model)
    {
        userId = await localstore.GetItemAsync<string>("UserId");
        calenderService.UpdateAppointmentAsync(userId, model.Id, model);
        DialogService.Close(model);
    }

    void OnDeleteAppointmentClick()
    {
        model.Delete = true;
        OnSubmit(model);
    }
}