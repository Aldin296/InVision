
@page "/settings"
@using InVision.Data
@inject Blazored.LocalStorage.ILocalStorageService localstore
@inject Data.UserService userservice



<RadzenPanel>
    <HeaderTemplate>
        <RadzenText TextStyle="TextStyle.H6" Class="rz-display-flex rz-align-items-center rz-m-0">
            <RadzenIcon Icon="settings" class="rz-mr-1" /><b>User Settings</b>
        </RadzenText>
    </HeaderTemplate>
    <ChildContent>
        <br />
        <RadzenRow Style="height: 100%" Gap="2rem">
            <RadzenColumn Size="3">
                <h3 style="text-align: left; margin-left: 20px;">Avatar</h3>
            </RadzenColumn>
        </RadzenRow>
        <hr />
        <RadzenRow Gap="2rem">
            <RadzenColumn Style="display: flex; align-items: center; margin-left: 20px;" Size="3">
                <label for="fileInput" style="cursor: pointer;">
                    <RadzenImage Path="@selectedImagePath" Style="width: 8rem;" />
                </label>
                <InputFile type="file" id="fileInput" style="display: none;" accept="image/*" OnChange="@HandleFileChange" multiple />
            </RadzenColumn>
        </RadzenRow>

        <br />
        <br />

        <RadzenRow Style="height: 100%; margin: 10,10,10,10">
            <RadzenColumn Size="3">
                <h3 style="text-align: left; margin-left: 20px;">User Details</h3>
            </RadzenColumn>

        </RadzenRow>
        <hr />

        <RadzenRow Style="margin-bottom: 10px;">
            <RadzenColumn Size="2" Style="display: flex; align-items: center;">
                <RadzenText style="text-align: left; margin-left: 20px;" TextStyle="TextStyle.H5">Name</RadzenText>
            </RadzenColumn>
            <RadzenColumn Size="10">
                <RadzenTextBox Style="width:50%" Placeholder=@user?.Name></RadzenTextBox>
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow Style="margin-bottom: 10px;">
            <RadzenColumn Size="2" Style="display: flex; align-items: center;">
                <RadzenText style="text-align: left; margin-left: 20px;" TextStyle="TextStyle.H5">E-Mail</RadzenText>
            </RadzenColumn>
            <RadzenColumn Size="10">
                <RadzenTextBox Style="width:50%" Placeholder=@user?.Email></RadzenTextBox>
            </RadzenColumn>
        </RadzenRow>


        <RadzenRow Style="margin-bottom: 10px;">
            <RadzenColumn Size="2" Style="display: flex; align-items: center;">
                <RadzenText style="text-align: left; margin-left: 20px;" TextStyle="TextStyle.H5">Old Password</RadzenText>
            </RadzenColumn>
            <RadzenColumn Size="10">
                <RadzenTextBox Style="width:50%"></RadzenTextBox>
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow Style="margin-bottom: 10px;">
            <RadzenColumn Size="2" Style="display: flex; align-items: center;">
                <RadzenText style="text-align: left; margin-left: 20px;" TextStyle="TextStyle.H5">New Password</RadzenText>
            </RadzenColumn>
            <RadzenColumn Size="10">
                <RadzenTextBox Style="width:50%"></RadzenTextBox>
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow>
            <RadzenColumn Size="2" Style="margin-bottom: 10px; height:60px">
                <RadzenText style="text-align: left; margin-left: 20px;" TextStyle="TextStyle.H6">Do you want to receive emails?</RadzenText>
            </RadzenColumn>
            <RadzenColumn Size="1" Style="display: flex; align-items: center; height:60px">
                <RadzenSwitch Style="width:20px; height:25px"></RadzenSwitch>
            </RadzenColumn>
        </RadzenRow>

        <hr />
        <div style="display:flex; justify-content: flex-end">
            <RadzenButton Click="SaveProfile">Save</RadzenButton>
        </div>

    </ChildContent>
</RadzenPanel>



@code {

    User? user;
    public string? userid;
    public string selectedImagePath = "https://static-00.iconduck.com/assets.00/profile-circle-icon-512x512-zxne30hp.png";
    public byte[]? imageBytes;



    protected override async Task OnInitializedAsync()
    {
        userid = await localstore.GetItemAsync<string>("UserId");
        user = await userservice.GetUserById(userid);
         if (user != null && user.ProfilePicture != null && user.ProfilePicture.Length > 0)
    {
        // Convert byte array to base64 string
        selectedImagePath = $"data:image/png;base64,{Convert.ToBase64String(user.ProfilePicture)}";
    }
    else
    {
        // Set a default image path if no profile picture is available
        selectedImagePath = "https://static-00.iconduck.com/assets.00/profile-circle-icon-512x512-zxne30hp.png";
    }
    }


    //Handling the image input and converting it to byte code for saving it in the database
    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        var imageFile = e.File; // Get the selected image file

        if (imageFile != null)
        {
            try
            {
                // Read the selected image file as a byte array
                using (var stream = imageFile.OpenReadStream())
                {
                    using (var memoryStream = new MemoryStream())
                    {
                        await stream.CopyToAsync(memoryStream);
                        imageBytes = memoryStream.ToArray();
                    }
                }

                selectedImagePath = $"data:{imageFile.ContentType};base64,{Convert.ToBase64String(imageBytes)}";
            }
            catch (Exception ex)
            {
                // Handle any exceptions here, such as logging the error or displaying a message to the user
                Console.WriteLine($"Error converting image to byte array: {ex.Message}");
            }
        }
    }

    private async Task SaveProfile(MouseEventArgs e)
    {
        user.ProfilePicture = imageBytes;
        await userservice.UpdateUser(userid, user);
    }
}
